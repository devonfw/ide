:toc:
toc::[]

= Migration and compatibilitiy from 2023.04.001 onwards

Starting with devonfw-ide version `2023.07.001` some changes have been made that have a slight impact on compatibility.
Maintainers of settings repositories for devonfw-ide should take immediate action to mitigate potential incompatibility issues.
Sorry for any inconvenience - we created an automatic migration scripts but unfortunately we missed some edge cases for the compatibility.
For details about the root cause see https://github.com/devonfw/ide/issues/1085[#1085].

== Incompatibilities

The changes and resulting incompatibilities are listed in the following table:

.Incompatibilities
[options="header"]
|=======================
|*until 2023.04.001*            |*2023.07.001 or later*
|`INTELLIJ_EDITION_TYPE=C`      |`INTELLIJ_EDITION=intellij`
|`INTELLIJ_EDITION_TYPE=U`      |`INTELLIJ_EDITION=ultimate`
|`ECLIPSE_EDITION_TYPE=java`    |`ECLIPSE_EDITION=eclipse`
|`MAVEN_VERSION=...`            |`MVN_VERSION=...`
|`SONARQUBE_VERSION=...`        |`SONAR_VERSION=...`
|`DOCKER_EDITION=DOCKERDESKTOP` |`DOCKER_EDITION=docker`
|`DOCKER_EDITION=RANCHERDESKTOP`|`DOCKER_EDITION=rancher`
|`MAVEN_HOME=${DEVON_IDE_HOME}/software/maven`|`MAVEN_HOME=${DEVON_IDE_HOME}/software/mvn`
|`SONARQUBE_HOME=${DEVON_IDE_HOME}/software/sonarqube`|`SONAR_HOME=${DEVON_IDE_HOME}/software/sonar`
|=======================

== devon.properties

Inside your settings git repository edit the top-level `devon.properties` file (see https://github.com/devonfw/ide-settings/blob/master/devon.properties[here] for the template that you forked) and do the following changes:

* if present copy the line starting with `MAVEN_VERSION=` and rename the copy to `MVN_VERSION=`
* if present copy the line starting with `SONARQUBE_VERSION=` and rename the copy to `SONAR_VERSION=`
* if present copy the line starting with `INTELLIJ_EDITION_TYPE=` and rename the copy to `INTELLIJ_EDITION=` and change the value to `intellij` or `ultimate` (see table above)
* if present copy the line starting with `ECLIPSE_EDITION_TYPE=` and rename the copy to `ECLIPSE_EDITION=` and change the value to `eclipse` for the default edition (java edition).
* typically you should not define `DOCKER_EDITION` in this `devon.properties` file but if you do, please note that we have added backward compatibility for the old values in our new releases so you can leave this property untouched.

You can also irgnore the "old" properties and migrate all to the new style and additionally set this property:
```
DEVON_IDE_MIN_VERSION=2023.07.003
```
This will cause an error if a user will setup or update its devonfw-ide with a devonfw-ide version older than `2023.07.003`.

== workspace configuration for Eclipse or Intellij

As `MAVEN_HOME` changed from `${DEVON_IDE_HOME}/software/maven` to `${DEVON_IDE_HOME}/software/mvn` this could cause problems with your workspace configuration:

* For Eclipse the configration can be found https://github.com/devonfw/ide-settings/blob/41fe78002d4dc59ad3a180d8463dd8ab9129bda9/eclipse/workspace/update/.metadata/.plugins/org.eclipse.core.runtime/.settings/org.eclipse.m2e.core.prefs#L10[here].
* For Intellij the configuration can be found in `settings/intellij/workspace/setup/.idea/workspace.xml` or `settings/intellij/workspace/update/.idea/workspace.xml` in the property `<option name="mavenHome" value="${DEVON_IDE_HOME}/software/mvn" />` (under `<MavenGeneralSettings>`) if present.

In both cases if you want to make it work with the new versions of devonfw-ide but also keep compatibility with older versions so you do not break it for existing users that did not yet update, you can do the following trick:
Use `${MAVEN_HOME}` instead of `${DEVON_IDE_HOME}/software/mvn` that will work in both the old and the new releases.
