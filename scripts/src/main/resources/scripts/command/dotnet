#!/usr/bin/env bash
# autocompletion list
if [ "${1}" = "shortlist" ]
then
  if [ -z "${2}" ]
  then
    echo "setup version help"
  fi
  exit
fi

# shellcheck source=scripts/functions
source "$(dirname "${0}")"/../functions
TOOL_VERSION_COMMAND="dotnet --version"
# shellcheck source=scripts/commandlet-cli
source "$(dirname "${0}")"/../commandlet-cli

cd "${DEVON_IDE_HOME}" || exit 255

function doExists() {
  if [ -e "${1}" ]
  then
    return
  else
    return 255
  fi
}

function doSetup() {
  doInstall "dotnet" "${DOTNET_VERSION}" "${1}"
  if doExists ~/.templateengine/packages/Devon4Net.WebAPI.Template*
  then
    doDebug "Devon4net template already installed."
  else
    doRunCommand "'${DOTNET}' new -i devon4net.WebApi.Template"
  fi
}

function doRun() {
  doSetup silent
  doEcho "Running: dotnet ${*}"
  if doIsQuiet
  then
    "${DOTNET}" "${@}" > /dev/null
  else
    "${DOTNET}" "${@}"
  fi
}

#CLI
DOTNET_HOME="${DEVON_IDE_HOME}/software/dotnet"
DOTNET="${DOTNET_HOME}/dotnet"
case ${1} in 
"help" | "-h")
  echo "Setup or run DotNet SDK."
  echo
  echo "Arguments:"
  echo " setup                          setup DotNet SDK (install and verify)"
  echo " create «name» [«args»]         create a new devon4net application"
  exit
;;
"setup" | "s")
  doSetup "${2}"
;;
"create" | "c")
  doRun new Devon4NetAPI
;;
*)
  doRun "${*}"
;;
esac
