#!/usr/bin/env bash

# autocompletion list
if [ "${1}" = "shortlist" ]
then
  if [ -z "${2}" ]
  then
    echo "setup version pip install remove version -v --version help -h --help"
  fi
  exit
fi

if [ -n "${DEVON_IDE_TRACE}" ]; then set -vx; fi
# shellcheck source=scripts/functions
source "$(dirname "${0}")"/../functions

function doSetup() {
  # If no python is isntalled in directory, install it
  if [ ! -d "${DEVON_IDE_HOME}/software/python" ]
  then
    doEcho "Installing python..."
    doDevonCommand python setup silent
  fi
  local PIP_CMD="$(command -v pip)"
  local software="${DEVON_IDE_HOME}/software"
  if [ "$?" == 0 ] && [ "${PIP_CMD::${#software}}" = "${software}" ]
  then
    if [ "${1}" != "silent" ]
    then
      doEcho "Pip is already installed at ${PIP_CMD}. Use 'devon pip remove' if you want to remove it."
    fi
  else
    if doIsWindows
    then
      # If modules.pth doesn't exist in python directory, create it
      if [ ! -f "${software}/python/modules.pth" ]
      then
        doEcho "Creating modules.pth..."
        echo "../pip" > "${software}/python/modules.pth"
        echo "../setuptools" >> "${software}/python/modules.pth"
        echo "../wheel" >> "${software}/python/modules.pth"
        echo "../pkg_resources" >> "${software}/python/modules.pth"
      fi
      
      # Install pip via python
      doDownload "-" "${PIP_HOME}" "pip" "latest" "" "pip"
      cd "${PIP_HOME}" || exit 255
      PYTHON_HOME="${DEVON_IDE_HOME}/software/python"
      doDevonCommand python pip-latest-windows.py --no-warn-script-location "--target=${PIP_HOME}" 
      
      rm -rf "${PIP_HOME}/pip-latest-windows.py"
      export PATH="${PYTHON_HOME}:${PATH}"

    else
      doEcho "Your operating system is unsupported!"
    fi
  fi
  if [ "${1}" != "silent" ] && ! doIsQuiet
  then
    doEcho "Pip was installed successfully!"
    doWarning "If you get an error like 'Failed to run command: pip3', run 'devon' or restarting your terminal window and try running that command again manually."
    doRunCommand "pip3 --version"
  fi
}
function doInstallPackage(){
  # Install pip package
  local package="${1}"
  local software="${DEVON_IDE_HOME}/software/"
  local package_path="${software}${package}"

  # If pywin32 is not installed in the python Lib directory, install it. This is required for the azure cli to work.
  if [ ! -d "${software}/python/lib/site-packages/win32" ]
  then
    doRunPip "install pypiwin32"
  fi

  # Create new package folder in software directory
  if [ ! -d "${package_path}" ]
  then
    mkdir -p "${package_path}"
  fi

  # Write a new line to the modules.pth if the line doesn't exist
  if ! grep -q "../${package}" "${software}/python/modules.pth"
  then
    echo "../${package}" >> "${software}/python/modules.pth"
  fi

  # Install package with pip
  doRunPip "install ${package} --target=${package_path}"

  doEcho "Package ${package} installed successfully! If you get an error, that the command was not found, run 'devon' or restart your terminal window and try running that command again."

}

function doRemove(){
  # Remove pip package and the argument is not empty
  local package="${1}"

  if [ -n "${package}" ]
  then
    doRunPip "uninstall ${package}"
    
    if [ -d "${DEVON_IDE_HOME}/software/${package}" ]
    then
      # If not silent
      if [ "${1}" != "silent" ]
      then
        doEcho "Removing ${package}..."
      fi
      
      rm -rf "${DEVON_IDE_HOME}/software/${package}"
    fi
    doEcho "Package ${package} removed."
  else
    # Ask if you want to remove pip
    read -r -p "Do you want to remove pip? [y/N] " response
    if [[ "${response}" =~ ^([yY][eE][sS]|[yY])$ ]]
    then
      # Remove pip folder
      rm -rf "${DEVON_IDE_HOME}/software/pip"
      doEcho "Pip removed."
    fi
  fi
}

function doRunPip() {
  # If pip is not installed
  if [ ! -d "${DEVON_IDE_HOME}/software/python/pip" ]
  then
    doSetup silent
  fi
  if doIsQuiet
  then
    doRunCommand "pip ${*}" > /dev/null
  else
    doRunCommand "pip ${*}"
  fi
}

PIP_HOME="${DEVON_IDE_HOME}/software/pip"

case ${1} in 
  "help" | "-h")
    echo "Install Pip (Python Package Installer)."
    echo
    echo "Arguments:"
    echo " setup                    install pip on your machine."
    echo " «args»                   call pip with the specified arguments (call 'pip --help' for details)."
    echo " install «package»        install the specified Pip package."
    echo " remove «package»         remove the specified Pip package. If no package is specified, pip will be removed."
    echo " version                  show the version of pip installed."
    echo
  ;;
  "setup" | "-s" | "")
    doSetup "${2}"
  ;;
  "version" | "-v" | "--version")
     doRunPip --version
  ;;
  "install" | "-i")
    doInstallPackage "${2}"
  ;;
  "remove" | "-r")
    doRemove ${2}
  ;;
  *)
     doRunPip "${@}"
  ;;
esac
