#!/usr/bin/env bash

# autocompletion list
if [ "${1}" = "shortlist" ]
then
  if [ -z "${2}" ]
  then
    echo "setup help"
  fi
  exit
fi

if [ -n "${DEVON_IDE_TRACE}" ]; then set -vx; fi
# shellcheck source=scripts/functions
source "$(dirname "${0}")"/../functions

function doSetup() {
  if doIsAzureInstalled
  then
    if [ "${1}" != "silent" ] && ! doIsQuiet
    then
      doEcho "Azure CLI is already installed at $(command -v az)"
    fi
  else
    doRequireNotBatch
    if doIsWindows
    then
      # Get leatest release
      if [ -z "${AZURECLI_VERSION}" ]
      then
        doEcho "Getting latest release..."
        AZURECLI_VERSION=$(curl -s https://api.github.com/repos/Azure/azure-cli/releases/latest | awk -F ":" '/tag_name/ {print $2}'| awk -F "\"" '{print $2}' | awk -F "-" '{print $3}')
      fi
      local version="${AZURECLI_VERSION}"
      doDownload "-" "" "az" "${version}"
      # Install Azure CLI for Windows
      doEcho "Installing Azure CLI for Windows..."
      modifyPathStructure
      installOnWindows
    else doFail "Sorry, Azure CLI installation support is not yet implemented for your OS. Please install manually or help devonfw-ide to support it for your OS by contributing a pull-request."
    fi
  fi
}

# modify a filepath for powershell path syntax e.g. /c/... -> c:/...
function modifyPathStructure(){
  modifiedPath=${DEVON_DOWNLOAD_DIR}
  partition=$(echo "${modifiedPath}" | cut -f2 -d'/'):'/' # -> <partition>:/
  modifiedPath=${partition}$(echo "${modifiedPath}" | cut -f3- -d'/')
  modifiedPath="${modifiedPath//'/'/'\'}"
}

# Install Azure CLI for Windows via Powershell Command
function installOnWindows(){  
  powershell.exe -Command "Start-Process msiexec.exe -verb runas -Wait -ArgumentList '/I ${modifiedPath}\az-${version}-windows.msi /QB-!'" &> /dev/null || exit_code=$?
  if [[ -z "${exit_code}" ]]
  then 
    setConfigDir
    doEcho "Azure CLI has been installed and is ready to use. \n\n******** IMPORTANT ******** \nRestart the console to use Azure CLI." 
  else
    read -r -p "You must run the installation with administration rights. Would you like to start the installation again? (Y/n)" answer 
    case ${answer:0:1} in 
      y|Y )
        doEcho "\nInstalling Azure CLI for Windows..."
        exit_code=""
        installOnWindows
      ;;
      * )
        doEcho "The installation has been canceled."
      ;;
    esac
  fi
  }

# Set directory for azure cli configuration file
function setConfigDir() {
  azurecli_export="export AZURE_CONFIG_DIR=${DEVON_IDE_HOME}/conf/.azure"
  if ! grep -q "${azurecli_export}" "${DEVON_IDE_HOME}/conf/devon.properties"
    then
      doRunCommand "export AZURE_CONFIG_DIR=${DEVON_IDE_HOME}/conf/.azure"
      echo -e "\n${azurecli_export}" >> "${DEVON_IDE_HOME}/conf/devon.properties"
  fi
  
}

# OS independet check if Azure CLI is installed
function doIsAzureInstalled() {
  if command -v az &> /dev/null
  then 
    return
  else
    return 255
  fi
}

function doRun() {
  doSetup silent
  doEcho "Running: Azure CLI ${*}"
  setConfigDir
  az "${@}"
}

# CLI
case ${1} in
"help" | "-h")
  echo "Install Azure CLI."
  echo
  echo "Arguments:"
  echo " setup                    install Azure CLI on your machine (global installation)."
  echo " <<args>>                 call Azure CLI with the specified arguments. Call az --help for details or use Azure CLI directly as preferred."
  echo
;;

"setup" | "s")
  doEcho "Installing Azure CLI..."
  doSetup
;;

"")
if ! doIsAzureInstalled
then
  doEcho "Installing Azure CLI..."
  doSetup
else doRun "${@}"
fi
;;

*)
if doIsAzureInstalled
then
  doRun "${@}"
else doEcho "Unknown argument "
fi
;;
esac
