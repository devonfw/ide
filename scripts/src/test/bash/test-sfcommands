#!/bin/bash

function doActivatePlugins () {
  for plugin in ${1}/* 
  do
    sed '/plugin_active/ s/false/true/' ${plugin} &> /dev/null
  done
}

success=0
failure=0
failures=()
total=0
failedTest=false
cd ../test-setup
CLI="${PWD}/scripts/devon"
#rm -f -r software
doActivatePlugins "settings/eclipse/plugins"
doActivatePlugins "settings/intellij/plugins"
doActivatePlugins "settings/vscode/plugins"
cd scripts/command
rm build
rm docker
rm help
rm kubectl
rm release
for command in *
do
  echo "Running command ${command}"
  "${CLI}" "${command}" setup  &> /dev/null
  result=${?}
  if [ "${result}" == 0 ]
  then
    echo "[SUCCESS] Succeeded running command #${total}: ${command}"
    let "success++"
  else
    echo "[ERROR] Failed running command #${total}: ${command} - exit code ${result}"
    failures+=("${command}")
    let "failure++"
  fi
  let "total++"
done
echo
echo "*****************************************************"
echo "Executed #${total} commands(s), #${success} succeeded and #${failure} failed"
if [ "${failure}" == 0 ]
then
  echo "All commands succeeded. Fine!"
else
  echo "There are commands failures! Please check and fix the following commands."
  for i in "${failures[@]}"
  do
    echo "${i}"
  done
  failedTest=true
fi

echo "Running test for EXTRA_JAVA_VERSION"
export EXTRA_JAVA_VERSION=8u292b10
"${CLI}" java setup &> /dev/null
if [[ -d "../../software/extra/java" ]] 
then
  echo "[SUCCESS] EXTRA_JAVA_VERSION"
else
  echo "[FAILURE] EXTRA_JAVA_VERSION"
  failedTest=true
fi

echo "Running test for JAVA_VERSION"
export JAVA_VERSION=18.0.2_9
"${CLI}" java setup &> /dev/null
CURRENT_JAVA_VERSION=$(cat "../../software/java/.devon.software.version")
if [[ "${JAVA_VERSION}" == "${CURRENT_JAVA_VERSION}" ]]
then
  echo "[SUCCESS] JAVA_VERSION"
else
  echo "[FAILURE] JAVA_VERSION"
  failedTest=true
fi

if "${failedTest}"
then
  exit 1
else 
  exit 0
fi


