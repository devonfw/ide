#!/bin/bash

source "$(dirname "${0}")"/functions-test

success=0
failure=0
total=0

function doTests() {
for testpath in "$(dirname $0)"/"${1}"-*
do
  testcase="${testpath/*\//}"
  echo "Running test #${total}: ${testcase}"
  if [[ $testcase == integration* ]]
  then
    cd test-setup
    rm -fR "${PWD}/software"
    rm -f "${PWD}/conf/devon.properties"
    rm -f "${PWD}/settings/devon.properties"
    echo "JAVA_VERSION=17*" >> "${PWD}/settings/devon.properties"
  else
    mkdir -p "${testcase}/conf"
    cd "${testcase}"
    echo "export M2_REPO=~/.m2/repository" > "conf/devon.properties"
  fi
  "${testpath}" &> errorLog
  result=${?}
  if [ "${result}" == 0 ]
  then
    doSuccess "[SUCCESS] Succeeded running test #${total}: ${testcase}"
    let "success++"
  else
    doError "[ERROR] Failed running test #${total}: ${testcase} - exit code ${result}"
    let "failure++"
    cat errorLog
    echo -e "[ERROR] Failed running test #${total}: ${testcase} - exit code ${result}" >> ../errorList
  fi
  let "total++"
  cd ..
done
}

mkdir -p ~/.devon
touch ~/.devon/.license.agreement
rm -rf integration-test
mkdir -p integration-test
cd integration-test
export DEVON_SKIP_PROJECT_SETUP=true
doTests "test"
[[ "${INTEGRATION_TEST}" == true ]] && doTests "integration-test"
echo -e "\n*****************************************************"
echo "Executed #${total} test(s), #${success} succeeded and #${failure} failed"
echo -e "*****************************************************\n"
if [ "${failure}" == 0 ]
then
  doSuccess "All test succeeded. Fine!"
else
  doWarning "There are test failures! Please check the logs and fix errors.\n"
  cat errorList
  exit 1
fi
